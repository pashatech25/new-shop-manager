-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.addons (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  tenant_id uuid NOT NULL,
  name text NOT NULL,
  description text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT addons_pkey PRIMARY KEY (id),
  CONSTRAINT addons_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id)
);
CREATE TABLE public.completed_jobs (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  tenant_id uuid NOT NULL,
  code text NOT NULL,
  title text NOT NULL,
  customer_id uuid,
  marginpct numeric,
  items jsonb,
  totals jsonb,
  completed_at timestamp with time zone NOT NULL DEFAULT now(),
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  status text NOT NULL DEFAULT 'completed'::text,
  CONSTRAINT completed_jobs_pkey PRIMARY KEY (id),
  CONSTRAINT completed_jobs_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES public.customers(id),
  CONSTRAINT completed_jobs_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id)
);
CREATE TABLE public.custom_types (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  tenant_id uuid NOT NULL,
  kind text NOT NULL CHECK (kind = ANY (ARRAY['vendor'::text, 'material'::text])),
  name text NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT custom_types_pkey PRIMARY KEY (id),
  CONSTRAINT custom_types_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id)
);
CREATE TABLE public.customers (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  tenant_id uuid NOT NULL,
  company text,
  name text NOT NULL,
  email text,
  phone text,
  website text,
  address text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT customers_pkey PRIMARY KEY (id),
  CONSTRAINT customers_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id)
);
CREATE TABLE public.equipments (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  tenant_id uuid NOT NULL,
  name text NOT NULL,
  description text,
  type text NOT NULL,
  rate_c numeric DEFAULT 0,
  rate_m numeric DEFAULT 0,
  rate_y numeric DEFAULT 0,
  rate_k numeric DEFAULT 0,
  rate_white numeric DEFAULT 0,
  rate_soft_white numeric DEFAULT 0,
  rate_gloss numeric DEFAULT 0,
  use_soft_white boolean,
  threshold_pct numeric DEFAULT 20,
  ink_level_c numeric DEFAULT 100,
  ink_level_m numeric DEFAULT 100,
  ink_level_y numeric DEFAULT 100,
  ink_level_k numeric DEFAULT 100,
  ink_level_white numeric DEFAULT 100,
  ink_level_soft_white numeric DEFAULT 100,
  ink_level_gloss numeric DEFAULT 100,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  ink_levels jsonb NOT NULL DEFAULT '{}'::jsonb,
  updated_at timestamp with time zone,
  ink_channels jsonb,
  CONSTRAINT equipments_pkey PRIMARY KEY (id),
  CONSTRAINT equipments_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id)
);
CREATE TABLE public.inventory_ledger (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  tenant_id uuid NOT NULL,
  material_id uuid NOT NULL,
  qty_delta numeric NOT NULL,
  reason text,
  ref_type text,
  ref_id uuid,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT inventory_ledger_pkey PRIMARY KEY (id),
  CONSTRAINT inventory_ledger_material_id_fkey FOREIGN KEY (material_id) REFERENCES public.materials(id)
);
CREATE TABLE public.invoices (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  tenant_id uuid NOT NULL,
  code text NOT NULL,
  memo text,
  totals jsonb,
  deposit numeric DEFAULT 0,
  discount numeric DEFAULT 0,
  discount_is_percent boolean DEFAULT false,
  tax_on_discount boolean DEFAULT false,
  pdf_path text,
  pdf_updated_at timestamp with time zone,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  job_id uuid,
  title text,
  customer_id uuid,
  items jsonb,
  status text,
  discount_type text DEFAULT 'flat'::text CHECK (discount_type = ANY (ARRAY['flat'::text, 'percent'::text])),
  discount_value numeric DEFAULT 0,
  apply_tax_to_discount boolean DEFAULT false,
  paid_at timestamp with time zone,
  paid_via text,
  payment_ref text,
  payment_amount numeric,
  CONSTRAINT invoices_pkey PRIMARY KEY (id),
  CONSTRAINT invoices_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id),
  CONSTRAINT invoices_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES public.customers(id)
);
CREATE TABLE public.jobs (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  tenant_id uuid NOT NULL,
  code text NOT NULL,
  title text NOT NULL,
  customer_id uuid,
  marginpct numeric DEFAULT 100,
  items jsonb,
  totals jsonb,
  status text DEFAULT 'active'::text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT jobs_pkey PRIMARY KEY (id),
  CONSTRAINT jobs_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id),
  CONSTRAINT jobs_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES public.customers(id)
);
CREATE TABLE public.materials (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  tenant_id uuid NOT NULL,
  vendor_id uuid,
  type_id uuid,
  name text NOT NULL,
  description text,
  image_path text,
  purchase_price numeric DEFAULT 0,
  selling_price numeric DEFAULT 0,
  on_hand numeric DEFAULT 0,
  reserved numeric DEFAULT 0,
  reorder_threshold numeric DEFAULT 0,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT materials_pkey PRIMARY KEY (id),
  CONSTRAINT materials_type_id_fkey FOREIGN KEY (type_id) REFERENCES public.custom_types(id),
  CONSTRAINT materials_vendor_id_fkey FOREIGN KEY (vendor_id) REFERENCES public.vendors(id),
  CONSTRAINT materials_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id)
);
CREATE TABLE public.notifications (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  tenant_id uuid NOT NULL,
  event text NOT NULL,
  message text,
  payload jsonb,
  read_at timestamp with time zone,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT notifications_pkey PRIMARY KEY (id)
);
CREATE TABLE public.payments (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  tenant_id uuid NOT NULL,
  invoice_id uuid NOT NULL,
  source text NOT NULL CHECK (source = ANY (ARRAY['stripe'::text, 'manual'::text])),
  method text,
  amount numeric NOT NULL,
  currency text NOT NULL DEFAULT 'USD'::text,
  stripe_payment_intent_id text,
  stripe_charge_id text,
  meta jsonb,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT payments_pkey PRIMARY KEY (id),
  CONSTRAINT payments_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id),
  CONSTRAINT payments_invoice_id_fkey FOREIGN KEY (invoice_id) REFERENCES public.invoices(id)
);
CREATE TABLE public.plans (
  code text NOT NULL UNIQUE,
  name text NOT NULL,
  description text,
  price_monthly_cents integer NOT NULL,
  stripe_price_id text,
  features jsonb NOT NULL DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  plan_id uuid NOT NULL DEFAULT gen_random_uuid(),
  price_yearly_cents integer,
  currency text NOT NULL,
  active boolean DEFAULT true,
  CONSTRAINT plans_pkey PRIMARY KEY (code)
);
CREATE TABLE public.profiles (
  user_id uuid NOT NULL,
  tenant_id uuid,
  email text,
  role text DEFAULT 'user'::text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT profiles_pkey PRIMARY KEY (user_id),
  CONSTRAINT profiles_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT profiles_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id)
);
CREATE TABLE public.purchase_order_items (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  tenant_id uuid NOT NULL,
  po_id uuid NOT NULL,
  material_id uuid,
  description text,
  qty numeric NOT NULL DEFAULT 1,
  unit_cost numeric,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT purchase_order_items_pkey PRIMARY KEY (id),
  CONSTRAINT purchase_order_items_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id),
  CONSTRAINT purchase_order_items_po_id_fkey FOREIGN KEY (po_id) REFERENCES public.purchase_orders(id),
  CONSTRAINT purchase_order_items_material_id_fkey FOREIGN KEY (material_id) REFERENCES public.materials(id)
);
CREATE TABLE public.purchase_orders (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  tenant_id uuid NOT NULL,
  code text NOT NULL,
  vendor_id uuid,
  status text NOT NULL DEFAULT 'open'::text,
  pdf_path text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  job_id uuid,
  CONSTRAINT purchase_orders_pkey PRIMARY KEY (id),
  CONSTRAINT purchase_orders_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id),
  CONSTRAINT purchase_orders_job_id_fkey FOREIGN KEY (job_id) REFERENCES public.jobs(id),
  CONSTRAINT purchase_orders_vendor_id_fkey FOREIGN KEY (vendor_id) REFERENCES public.vendors(id)
);
CREATE TABLE public.quotes (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  tenant_id uuid NOT NULL,
  code text NOT NULL,
  title text NOT NULL,
  customer_id uuid,
  marginpct numeric DEFAULT 100,
  items jsonb,
  totals jsonb,
  status text DEFAULT 'open'::text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT quotes_pkey PRIMARY KEY (id),
  CONSTRAINT quotes_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id),
  CONSTRAINT quotes_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES public.customers(id)
);
CREATE TABLE public.settings (
  tenant_id uuid NOT NULL,
  business_name text,
  business_email text,
  business_phone text,
  business_address text,
  brand_primary text DEFAULT '#111111'::text,
  brand_secondary text DEFAULT '#007bff'::text,
  brand_logo_path text,
  tax_rate numeric DEFAULT 0,
  currency text DEFAULT 'USD'::text,
  quote_prefix text DEFAULT 'Q-'::text,
  quote_counter integer DEFAULT 1,
  job_prefix text DEFAULT 'J-'::text,
  job_counter integer DEFAULT 1,
  invoice_prefix text DEFAULT 'INV-'::text,
  invoice_counter integer DEFAULT 1,
  webhook_enabled boolean DEFAULT false,
  webhook_url text,
  webhook_secret text,
  evt_quote_created boolean DEFAULT true,
  evt_quote_to_job boolean DEFAULT true,
  evt_job_completed boolean DEFAULT true,
  evt_invoice_generated boolean DEFAULT true,
  evt_low_ink boolean DEFAULT true,
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  webhook_quote_created_url text,
  webhook_quote_created_secret text,
  webhook_quote_created_enabled boolean DEFAULT false,
  webhook_quote_to_job_url text,
  webhook_quote_to_job_secret text,
  webhook_quote_to_job_enabled boolean DEFAULT false,
  webhook_job_completed_url text,
  webhook_job_completed_secret text,
  webhook_job_completed_enabled boolean DEFAULT false,
  webhook_invoice_generated_url text,
  webhook_invoice_generated_secret text,
  webhook_invoice_generated_enabled boolean DEFAULT false,
  webhook_low_ink_url text,
  webhook_low_ink_secret text,
  webhook_low_ink_enabled boolean DEFAULT false,
  webhook_low_materials_url text,
  webhook_low_materials_secret text,
  webhook_low_materials_enabled boolean DEFAULT false,
  email_invoice_subject text,
  email_invoice_template_html text,
  email_po_subject text,
  email_po_template_html text,
  brand_logo_url text,
  email_invoice_enabled boolean DEFAULT true,
  email_invoice_html text,
  email_po_enabled boolean DEFAULT true,
  email_po_html text,
  email_invoice_design_json jsonb,
  email_po_design_json jsonb,
  stripe_enabled boolean DEFAULT false,
  stripe_live_mode boolean DEFAULT false,
  stripe_publishable_key text,
  stripe_secret_key text,
  stripe_webhook_secret text,
  site_url text,
  stripe_connected_account_id text,
  stripe_connect_status text DEFAULT 'disconnected'::text,
  stripe_connect_info jsonb,
  CONSTRAINT settings_pkey PRIMARY KEY (tenant_id),
  CONSTRAINT settings_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id)
);
CREATE TABLE public.subscription_payments (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  tenant_id uuid NOT NULL,
  stripe_invoice_id text,
  stripe_payment_intent_id text,
  amount_cents integer,
  currency text,
  status text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT subscription_payments_pkey PRIMARY KEY (id),
  CONSTRAINT subscription_payments_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id)
);
CREATE TABLE public.templates (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  tenant_id uuid NOT NULL,
  kind text NOT NULL CHECK (kind = ANY (ARRAY['quote'::text, 'job'::text])),
  name text NOT NULL,
  include_customer boolean DEFAULT false,
  payload jsonb NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT templates_pkey PRIMARY KEY (id),
  CONSTRAINT templates_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id)
);
CREATE TABLE public.tenant_users (
  tenant_id uuid NOT NULL,
  user_id uuid NOT NULL,
  role text DEFAULT 'owner'::text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT tenant_users_pkey PRIMARY KEY (tenant_id, user_id),
  CONSTRAINT tenant_users_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id),
  CONSTRAINT tenant_users_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(user_id)
);
CREATE TABLE public.tenants (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name text NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  plan_code text DEFAULT 'free'::text,
  plan_status text DEFAULT 'inactive'::text,
  stripe_customer_id text,
  stripe_subscription_id text,
  current_period_end timestamp with time zone,
  CONSTRAINT tenants_pkey PRIMARY KEY (id)
);
CREATE TABLE public.vendors (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  tenant_id uuid NOT NULL,
  name text NOT NULL,
  email text,
  phone text,
  website text,
  address text,
  type_id uuid,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT vendors_pkey PRIMARY KEY (id),
  CONSTRAINT vendors_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id),
  CONSTRAINT vendors_type_id_fkey FOREIGN KEY (type_id) REFERENCES public.custom_types(id)
);
CREATE TABLE public.webhook_deliveries (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  tenant_id uuid NOT NULL,
  event text NOT NULL,
  status text NOT NULL DEFAULT 'queued'::text,
  attempts integer NOT NULL DEFAULT 0,
  endpoint text,
  last_error text,
  payload jsonb,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT webhook_deliveries_pkey PRIMARY KEY (id),
  CONSTRAINT webhook_deliveries_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id)
);